---
import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import rawLang from "../../data/lang.json";
import { getCollection, type CollectionEntry } from "astro:content";

// 1) Типизируем lang.json
type LangKey = "ru" | "en";
type MenuItem = { href: string; text: string; external?: boolean };
type LangPack = { menu: MenuItem[] } & Record<string, unknown>;
const lang = rawLang as Record<LangKey, LangPack>;

// 2) Безопасно получаем язык (дефолт — "ru")
const currentLang: LangKey = (Astro.params.lang as LangKey) ?? "ru";

// 3) Достаём меню для языка с фолбэком
const menu: MenuItem[] = lang[currentLang]?.menu ?? [];

// 4) Получаем посты строго типизированным массивом
const posts: CollectionEntry<"blog">[] = (
  await getCollection("blog", ({ data }) => data.lang === currentLang)
).sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// 5) Заголовок страницы — из меню или фолбэк
const blogTitle =
  menu.find((item) => item.href.includes("/blog"))?.text ||
  (currentLang === "ru" ? "Блог" : "Blog");
---

<Layout title={blogTitle}>
  <Header menu={menu} />

  <main class="content container">
    <section class="blog-list">
      <h1>{blogTitle}</h1>

      <div class="blog-container">
        {
          posts.map((post) => (
            <article class="blog-card">
              {post.data.image && (
                <a href={`/${currentLang}/blog/${post.slug}`}>
                  <img
                    src={post.data.image}
                    alt={post.data.title}
                    class="blog-img"
                  />
                </a>
              )}
              <h2 class="blog-title">
                <a href={`/${currentLang}/blog/${post.slug}`}>
                  {post.data.title}
                </a>
              </h2>
              <time class="blog-date">{post.data.date}</time>
            </article>
          ))
        }
      </div>
    </section>
  </main>

  <Footer
    socialLinks={[
      { href: "https://github.com/adamlean", icon: "fab fa-github" },
      { href: "https://t.me/dg404_bot", icon: "fa-brands fa-telegram" },
      { href: "https://www.behance.net/adamlean92", icon: "fab fa-behance" },
      {
        href: "https://soundcloud.com/mastamonk36",
        icon: "fa-brands fa-soundcloud",
      },
    ]}
    author="Адам Лин"
  />
</Layout>
